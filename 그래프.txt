그래프
1. 누가 만들었는지
그래프 이론은 18세기 스위스의 수학자 "레온하르트 오일러"의 쾨니히스베르크 다리 문제 해결에서 시작

2. 왜 만들었는지
현실 세계의 복잡한 관계와 시스템을 효율적으로 표현하고 분석하기 위함
그래프는 복잡한 시스템의 구조와 동작 방식을 분석하는 데 유용하기 때문

3. 그래프란 무엇인지
그래프는 정점(vertx)과 간선(edge)으로 이루어진 자료구조
정점(Vertex): 그래프를 구성하는 기본 단위로, 노드(node)라고도 불립니다. 객체, 개체, 위치 등 다양한 대상을 나타낼 수 있습니다.
간선(Edge): 두 정점을 연결하는 선으로, 관계, 연결, 경로 등을 나타냅니다.
방향성(Direction): 간선에 방향이 있는 경우 방향 그래프(directed graph), 없는 경우 무방향 그래프(undirected graph)라고 합니다.
가중치(Weight): 간선에 할당된 값으로, 거리, 비용, 중요도 등을 나타낼 수 있습니다.

표현방법
인접 행렬(Adjacency Matrix): 2차원 배열을 사용하여 정점 간의 연결 관계를 나타냅니다.
인접 리스트(Adjacency List): 각 정점에 연결된 정점들의 리스트를 사용하여 연결 관계를 나타냅니다.

활용 분야
소셜 네트워크: 사용자 간의 관계, 친구 추천, 커뮤니티 분석 등에 활용됩니다.
웹 검색: 웹 페이지 링크 분석, 검색 엔진 최적화 등에 활용됩니다.
지도 정보: 도로망, 경로 탐색, 최단 거리 계산 등에 활용됩니다.
통신 네트워크: 통신망 구조 분석, 데이터 전송 경로 설정 등에 활용됩니다.
인공지능: 지식 그래프, 추천 시스템, 자연어 처리 등에 활용됩니다.

그래프에서 활용하는 알고리즘
탐색 알고리즘(Search Algorithm): 그래프 내의 특정 정점을 찾거나 모든 정점을 방문하는 알고리즘
너비 우선 탐색(BFS): 큐를 사용하여 인접한 정점부터 탐색합니다.
깊이 우선 탐색(DFS): 스택 또는 재귀 함수를 사용하여 깊숙이 탐색합니다.

최단 경로 알고리즘(Shortest Path Algorithm): 두 정점 사이의 가장 짧은 경로를 찾는 알고리즘입니다.
다익스트라 알고리즘(Dijkstra's Algorithm): 가중치가 있는 그래프에서 최단 경로를 찾습니다.
벨만-포드 알고리즘(Bellman-Ford Algorithm): 음수 가중치가 있는 그래프에서 최단 경로를 찾습니다.

최소 신장 트리 알고리즘(Minimum Spanning Tree Algorithm): 모든 정점을 연결하는 최소 가중치의 간선 집합을 찾는 알고리즘입니다.
프림 알고리즘(Prim's Algorithm)
크루스칼 알고리즘(Kruskal's Algorithm)